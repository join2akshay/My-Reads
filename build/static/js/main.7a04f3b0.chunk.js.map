{"version":3,"sources":["BooksAPI.js","Book.js","MainPage.js","SearchPage.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","Book","_this","this","props","displayedThumbnail","imageLinks","thumbnail","react_default","a","createElement","className","style","width","height","backgroundImage","onChange","e","moveBooks","target","value","currentShelf","disabled","React","Component","MainPage","filter","map","key","Book_Book","react_router_dom","to","onClick","setState","showSearchPage","SearchPage","state","querry","searchedBooks","updateQuerry","console","log","updateSearchedBooks","BooksAPI","error","_this2","type","placeholder","searchedBook","BooksApp","dispaly","componentDidMount","react_router","exact","path","render","MainPage_MainPage","SearchPage_SearchPage","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7a04f3b0.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react'\n\nexport default class Book extends React.Component\n{\n    render() {\n        const {book} = this.props;\n        let displayedThumbnail = book.imageLinks ? book.imageLinks.thumbnail : '' ;\n        let value;\n        return (\n         \n                <div className=\"book\">\n                        <div className=\"book-top\">\n                          <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(\"${displayedThumbnail}\"` }}></div>\n                          <div className=\"book-shelf-changer\">\n                            <select onChange={(e)=>(\n                               this.props.moveBooks(this.props.book,\n                               e.target.value)\n                            )}\n                            value={this.props.currentShelf}\n                            >\n\n                              <option value=\"move\" disabled>Move to...</option>\n                              <option value=\"currentlyReading\">Currently Reading</option>\n                              <option value=\"wantToRead\">Want to Read</option>\n                              <option value=\"read\">Read</option>\n                              <option value=\"none\">None</option>\n                            </select>\n                          </div>\n                        </div>\n                        <div className=\"book-title\">To Kill a Mockingbird</div>\n                        <div className=\"book-authors\">Harper Lee</div>\n                      </div>\n           \n        )\n    }\n}","import React from 'react';\nimport Book from './Book'\nimport {Link} from 'react-router-dom'\nexport default  class MainPage extends React.Component{\n    render() {\n       \n     \n        return (\n           \n                 <div className=\"list-books\">\n         <div className=\"list-books-title\">\n           <h1>MyReads</h1>\n         </div>\n         <div className=\"list-books-content\">\n                <div>\n                <div className=\"bookshelf\">\n                <h2 className=\"bookshelf-title\">Currently Reading</h2>\n                <div className=\"bookshelf-books\">\n                  <ol className=\"books-grid\">\n                    {\n                        this.props.books.filter((book)=>\n                        book.shelf==='currentlyReading'\n                    ).map((book)=>\n                      (<li key={book.id}>\n                                <Book\n                                book = {book}\n                                currentShelf= 'currentlyReading'\n                                moveBooks={this.props.moveBooks}\n                                />\n                            </li>))\n                    }\n                    </ol>\n                    </div>\n                    </div>\n                    <div className=\"bookshelf\">\n                <h2 className=\"bookshelf-title\">Want to Read</h2>\n                <div className=\"bookshelf-books\">\n                  <ol className=\"books-grid\">\n                    {\n                        this.props.books.filter((book)=>\n                        book.shelf==='wantToRead'\n                    ).map((book)=>\n                      (<li key={book.id}>\n                                <Book\n                                book = {book}\n                                currentShelf= 'wantToRead'\n                                moveBooks={this.props.moveBooks}\n                                />\n                            </li>))\n                    }\n                    </ol>\n                    </div>\n                    </div>\n                    <div className=\"bookshelf\">\n                <h2 className=\"bookshelf-title\">Read</h2>\n                <div className=\"bookshelf-books\">\n                  <ol className=\"books-grid\">\n                    {\n                        this.props.books.filter((book)=>\n                        book.shelf==='read'\n                    ).map((book)=>\n                      (<li key={book.id}>\n                                <Book\n                                book = {book}\n                                currentShelf= 'read'\n                                moveBooks={this.props.moveBooks}\n                                />\n                            </li>))\n                    }\n                    </ol>\n                    </div>\n                    </div>\n                </div>\n         </div>\n         <div className=\"open-search\">\n         <Link to='/search'>\n\n              <button onClick={() => this.setState({ showSearchPage: true })}>Add a book</button>\n         </Link>\n            </div>\n    </div>\n            \n        )\n    }\n}","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport * as BooksAPI from './BooksAPI'\nimport Books from './Book'\n\nexport default  class SearchPage extends Component\n{\n    state={\n        querry:'',\n        searchedBooks:[]\n    }\n    updateQuerry=(e)=>{\n        this.setState({querry:e.target.value})\n        console.log(e.target.value)\n         this.updateSearchedBooks(e.target.value);\n    }\n    \n\n    updateSearchedBooks = (query) => {\n        if(query){\n          BooksAPI.search(query).then((searchedBooks) => {\n            if (searchedBooks.error){\n              this.setState({searchedBooks: []});\n            } else {\n              this.setState({searchedBooks: searchedBooks});\n            }\n        \n          })\n        } else {\n          this.setState({ searchedBooks: []});\n        }\n       \n    \n    }\n\n    render() {\n        return (\n          \n              <div className=\"search-books\">\n           <div className=\"search-books-bar\">\n            <Link to='/'>\n             <button className=\"close-search\">Close</button>\n\n            </Link>\n             <div className=\"search-books-input-wrapper\">\n               \n                \n               \n               <input type=\"text\" placeholder=\"Search by title or author\" onChange={this.updateQuerry}/>\n\n             </div>\n           </div>\n           <div className=\"search-books-results\">\n             <ol className=\"books-grid\">\n\n                {this.state.searchedBooks.map(searchedBook => {\n                    let shelf =\"none\";\n                    this.props.books.map(book => (\n                        book.id === searchedBook.id ?\n                        shelf = book.shelf :''));\n                    return (\n                    <li key ={searchedBook.id} >\n                    <Books\n                        book ={searchedBook}\n                        moveBooks = {this.props.moveBooks}\n                        currentShelf = {shelf}\n                    />\n                    </li>\n                    );\n                    })\n                }   \n             </ol>\n           </div>\n         </div>\n        )\n    }\n}","import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport {Route} from 'react-router-dom'\nimport MainPage from './MainPage'\nimport SearchPage from './SearchPage'\n\nclass BooksApp extends React.Component {\n  state = {\n    /**\n     * TODO: Instead of using this state variable to keep track of which page\n     * we're on, use the URL in the browser's address bar. This will ensure that\n     * users can use the browser's back and forward buttons to navigate between\n     * pages, as well as provide a good URL they can bookmark and share.\n     */\n    showSearchPage: false,\n    books:[]\n  }\n  dispaly=()=>{\n    BooksAPI.getAll().then((books)=>{\n      this.setState({books:books})\n  })\n}\ncomponentDidMount=()=>{\n  this.dispaly();\n  }\n\n\n\nmoveBooks = (book, shelf) => {\n  BooksAPI.update(book, shelf).then(() => {\n    this.dispaly()\n  })\n}\n\n  render() {\n    return (\n      <div className='app'>\n      <Route exact path='/' render={()=>\n       ( <MainPage books={this.state.books}\n         moveBooks={this.moveBooks}\n       />)\n       \n      }/> \n<Route\n  path='/Search'\n  render ={() => (\n           < SearchPage\n              books={this.state.books}\n              moveBooks = {this.moveBooks}\n            />\n          )}\n/>\n\n       </div>\n\n    //    <div className=\"app\">\n    //     {this.state.showSearchPage ? (\n    //       <div className=\"search-books\">\n    //        <div className=\"search-books-bar\">\n    //          <button className=\"close-search\" onClick={() => this.setState({ showSearchPage: false })}>Close</button>\n    //          <div className=\"search-books-input-wrapper\">\n               \n                \n               \n    //            <input type=\"text\" placeholder=\"Search by title or author\"/>\n\n    //          </div>\n    //        </div>\n    //        <div className=\"search-books-results\">\n    //          <ol className=\"books-grid\"></ol>\n    //        </div>\n    //      </div>\n    //    ) : (\n    //      <div className=\"list-books\">\n    //        <div className=\"list-books-title\">\n    //          <h1>MyReads</h1>\n    //        </div>\n    //        <div className=\"list-books-content\">\n    //          <div>\n    //            <div className=\"bookshelf\">\n    //              <h2 className=\"bookshelf-title\">Currently Reading</h2>\n    //              <div className=\"bookshelf-books\">\n    //                <ol className=\"books-grid\">\n    //                  <li>\n    //                    <div className=\"book\">\n    //                      <div className=\"book-top\">\n    //                        <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: 'url(\"http://books.google.com/books/content?id=PGR2AwAAQBAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE73-GnPVEyb7MOCxDzOYF1PTQRuf6nCss9LMNOSWBpxBrz8Pm2_mFtWMMg_Y1dx92HT7cUoQBeSWjs3oEztBVhUeDFQX6-tWlWz1-feexS0mlJPjotcwFqAg6hBYDXuK_bkyHD-y&source=gbs_api\")' }}></div>\n    //                        <div className=\"book-shelf-changer\">\n    //                          <select>\n    //                            <option value=\"move\" disabled>Move to...</option>\n    //                            <option value=\"currentlyReading\">Currently Reading</option>\n    //                            <option value=\"wantToRead\">Want to Read</option>\n    //                            <option value=\"read\">Read</option>\n    //                            <option value=\"none\">None</option>\n    //                          </select>\n    //                        </div>\n    //                      </div>\n    //                      <div className=\"book-title\">To Kill a Mockingbird</div>\n    //                      <div className=\"book-authors\">Harper Lee</div>\n    //                    </div>\n    //                  </li>\n    //                  <li>\n    //                    <div className=\"book\">\n    //                      <div className=\"book-top\">\n    //                        <div className=\"book-cover\" style={{ width: 128, height: 188, backgroundImage: 'url(\"http://books.google.com/books/content?id=yDtCuFHXbAYC&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE72RRiTR6U5OUg3IY_LpHTL2NztVWAuZYNFE8dUuC0VlYabeyegLzpAnDPeWxE6RHi0C2ehrR9Gv20LH2dtjpbcUcs8YnH5VCCAH0Y2ICaKOTvrZTCObQbsfp4UbDqQyGISCZfGN&source=gbs_api\")' }}></div>\n    //                        <div className=\"book-shelf-changer\">\n    //                          <select>\n    //                            <option value=\"move\" disabled>Move to...</option>\n    //                            <option value=\"currentlyReading\">Currently Reading</option>\n    //                            <option value=\"wantToRead\">Want to Read</option>\n    //                            <option value=\"read\">Read</option>\n    //                            <option value=\"none\">None</option>\n    //                          </select>\n    //                        </div>\n    //                      </div>\n    //                      <div className=\"book-title\">Ender's Game</div>\n    //                      <div className=\"book-authors\">Orson Scott Card</div>\n    //                    </div>\n    //                  </li>\n    //                </ol>\n    //              </div>\n    //            </div>\n    //            <div className=\"bookshelf\">\n    //              <h2 className=\"bookshelf-title\">Want to Read</h2>\n    //              <div className=\"bookshelf-books\">\n    //                <ol className=\"books-grid\">\n    //                  <li>\n    //                    <div className=\"book\">\n    //                      <div className=\"book-top\">\n    //                        <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: 'url(\"http://books.google.com/books/content?id=uu1mC6zWNTwC&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE73pGHfBNSsJG9Y8kRBpmLUft9O4BfItHioHolWNKOdLavw-SLcXADy3CPAfJ0_qMb18RmCa7Ds1cTdpM3dxAGJs8zfCfm8c6ggBIjzKT7XR5FIB53HHOhnsT7a0Cc-PpneWq9zX&source=gbs_api\")' }}></div>\n    //                        <div className=\"book-shelf-changer\">\n    //                          <select>\n    //                            <option value=\"move\" disabled>Move to...</option>\n    //                            <option value=\"currentlyReading\">Currently Reading</option>\n    //                            <option value=\"wantToRead\">Want to Read</option>\n    //                            <option value=\"read\">Read</option>\n    //                            <option value=\"none\">None</option>\n    //                          </select>\n    //                        </div>\n    //                      </div>\n    //                      <div className=\"book-title\">1776</div>\n    //                      <div className=\"book-authors\">David McCullough</div>\n    //                    </div>\n    //                  </li>\n    //                  <li>\n    //                    <div className=\"book\">\n    //                      <div className=\"book-top\">\n    //                        <div className=\"book-cover\" style={{ width: 128, height: 192, backgroundImage: 'url(\"http://books.google.com/books/content?id=wrOQLV6xB-wC&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE72G3gA5A-Ka8XjOZGDFLAoUeMQBqZ9y-LCspZ2dzJTugcOcJ4C7FP0tDA8s1h9f480ISXuvYhA_ZpdvRArUL-mZyD4WW7CHyEqHYq9D3kGnrZCNiqxSRhry8TiFDCMWP61ujflB&source=gbs_api\")' }}></div>\n    //                        <div className=\"book-shelf-changer\">\n    //                          <select>\n    //                            <option value=\"move\" disabled>Move to...</option>\n    //                            <option value=\"currentlyReading\">Currently Reading</option>\n    //                            <option value=\"wantToRead\">Want to Read</option>\n    //                            <option value=\"read\">Read</option>\n    //                            <option value=\"none\">None</option>\n    //                          </select>\n    //                        </div>\n    //                      </div>\n    //                      <div className=\"book-title\">Harry Potter and the Sorcerer's Stone</div>\n    //                      <div className=\"book-authors\">J.K. Rowling</div>\n    //                    </div>\n    //                  </li>\n    //                </ol>\n    //              </div>\n    //            </div>\n    //            <div className=\"bookshelf\">\n    //              <h2 className=\"bookshelf-title\">Read</h2>\n    //              <div className=\"bookshelf-books\">\n    //                <ol className=\"books-grid\">\n    //                  <li>\n    //                    <div className=\"book\">\n    //                      <div className=\"book-top\">\n    //                        <div className=\"book-cover\" style={{ width: 128, height: 192, backgroundImage: 'url(\"http://books.google.com/books/content?id=pD6arNyKyi8C&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE70Rw0CCwNZh0SsYpQTkMbvz23npqWeUoJvVbi_gXla2m2ie_ReMWPl0xoU8Quy9fk0Zhb3szmwe8cTe4k7DAbfQ45FEzr9T7Lk0XhVpEPBvwUAztOBJ6Y0QPZylo4VbB7K5iRSk&source=gbs_api\")' }}></div>\n    //                        <div className=\"book-shelf-changer\">\n    //                          <select>\n    //                            <option value=\"move\" disabled>Move to...</option>\n    //                            <option value=\"currentlyReading\">Currently Reading</option>\n    //                            <option value=\"wantToRead\">Want to Read</option>\n    //                            <option value=\"read\">Read</option>\n    //                            <option value=\"none\">None</option>\n    //                          </select>\n    //                        </div>\n    //                      </div>\n    //                      <div className=\"book-title\">The Hobbit</div>\n    //                      <div className=\"book-authors\">J.R.R. Tolkien</div>\n    //                    </div>\n    //                  </li>\n    //                  <li>\n    //                    <div className=\"book\">\n    //                      <div className=\"book-top\">\n    //                        <div className=\"book-cover\" style={{ width: 128, height: 174, backgroundImage: 'url(\"http://books.google.com/books/content?id=1q_xAwAAQBAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE712CA0cBYP8VKbEcIVEuFJRdX1k30rjLM29Y-dw_qU1urEZ2cQ42La3Jkw6KmzMmXIoLTr50SWTpw6VOGq1leINsnTdLc_S5a5sn9Hao2t5YT7Ax1RqtQDiPNHIyXP46Rrw3aL8&source=gbs_api\")' }}></div>\n    //                        <div className=\"book-shelf-changer\">\n    //                          <select>\n    //                            <option value=\"move\" disabled>Move to...</option>\n    //                            <option value=\"currentlyReading\">Currently Reading</option>\n    //                            <option value=\"wantToRead\">Want to Read</option>\n    //                            <option value=\"read\">Read</option>\n    //                            <option value=\"none\">None</option>\n    //                          </select>\n    //                        </div>\n    //                      </div>\n    //                      <div className=\"book-title\">Oh, the Places You'll Go!</div>\n    //                      <div className=\"book-authors\">Seuss</div>\n    //                    </div>\n    //                  </li>\n    //                  <li>\n    //                    <div className=\"book\">\n    //                      <div className=\"book-top\">\n    //                        <div className=\"book-cover\" style={{ width: 128, height: 192, backgroundImage: 'url(\"http://books.google.com/books/content?id=32haAAAAMAAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE72yckZ5f5bDFVIf7BGPbjA0KYYtlQ__nWB-hI_YZmZ-fScYwFy4O_fWOcPwf-pgv3pPQNJP_sT5J_xOUciD8WaKmevh1rUR-1jk7g1aCD_KeJaOpjVu0cm_11BBIUXdxbFkVMdi&source=gbs_api\")' }}></div>\n    //                        <div className=\"book-shelf-changer\">\n    //                          <select>\n    //                            <option value=\"move\" disabled>Move to...</option>\n    //                            <option value=\"currentlyReading\">Currently Reading</option>\n    //                            <option value=\"wantToRead\">Want to Read</option>\n    //                            <option value=\"read\">Read</option>\n    //                            <option value=\"none\">None</option>\n    //                          </select>\n    //                        </div>\n    //                      </div>\n    //                      <div className=\"book-title\">The Adventures of Tom Sawyer</div>\n    //                      <div className=\"book-authors\">Mark Twain</div>\n    //                    </div>\n    //                  </li>\n    //                </ol>\n    //              </div>\n    //            </div>\n    //          </div>\n    //        </div>\n    //        <div className=\"open-search\">\n    //          <button onClick={() => this.setState({ showSearchPage: true })}>Add a book</button>\n    //        </div>\n    //      </div>\n    //    )}\n    //    </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n<BrowserRouter>\n\n<App />\n</BrowserRouter>\n\n, document.getElementById('root'))\n"],"sourceRoot":""}